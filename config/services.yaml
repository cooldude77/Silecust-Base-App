# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    silecust.sign_up.email.email_from_address: from@fromAddress
    silecust.sign_up.email.template_location: security/external/user/sign_up/email/sign_up_email.html.twig
    silecust.sign_up.email.headline: A Headline
    silecust.default_country: IN
    file_storage_path: '/data/dev'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    product_search_service:
        class: Silecust\WebShop\Service\MasterData\Product\ProductSearch
    product.search:
        alias: product_search_service
    twig_try_catch_extension:
        class: 'Gglnx\TwigTryCatch\Extension\TryCatchExtension'
        tags:
            - { name: twig.extension }
when@test:
    parameters:
        file_storage_path: '/data/test'

# The reason we need to declare session classes for mocking here:
# because if not present the session is created new in a service that uses requeststack
# as an argument
# even if supplied from the bundle
    # for ex: CartSessionProductService
    services:
        session.storage.factory.mock_file:
            class: Silecust\WebShop\Service\Testing\Utility\MyOwnMockFileSessionStorageFactory
        session.factory:
            class: Silecust\WebShop\Service\Testing\Utility\MySessionFactory
            arguments:
                $requestStack: '@request_stack'
                $storageFactory: '@session.storage.factory.mock_file'
                $usageReporter: [ '@session_listener','onSessionUsage' ]